### Custom Types (aka Output types) ###
scalar GraphQLLong

type User {
    _id: String!,
    email: String!,
    password: String!,
    created: [Todo]!
}

type Todo {
    _id: String,
    title: String!,
    description: String!,
    done: Boolean!,
    duration: Int,
    creationTimeStamp: Int!,
    creatorId: String!
}

### Inputs ###
input TodoInput {
    title: String!,
    description: String!,
    done: Boolean!,
    duration: Int,
    creationTimeStamp: GraphQLLong!,
    creatorId: String!
}

input UserInput {
    email: String!,
    password: String
}

### Globals ###
type Query {
    user(id: String!): User!,
    todo(id: String!): Todo!,
    todos: [Todo!]!,
    authTest: String!
}

type Mutation {
    #Auth
    register(user: UserInput!): User,
    logout: Boolean!,
    login(user: UserInput!): Boolean!,
    #Todos
    replaceTodo(todo: TodoInput!, id: String!): Boolean!,
    createTodo(todo: TodoInput!): Todo!,
    deleteTodo(id: String!): Boolean!,
    #Users
    createUser(user: UserInput!): User!
}
    
schema {
    query: Query,
    mutation: Mutation
}

# mutation {
# 	createUser(user: {
#     email:"filsdeup@u.te",
#     password:"fsct"
#   }) {
#     email,
#     password
#   }
# }